plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'com.bigdataboutique.logging.log4j2'
version = '2.8.1'

description = """Log4j2 Elasticsearch appender using the Java JDK HTTP client"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
	jcenter()        
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-nosql', version:'2.8.2'
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version:'2.8.2'
    testCompile group: 'org.easymock', name: 'easymock', version:'3.2'
    testCompile group: 'junit', name: 'junit', version:'4.12'
}

bintray {
    user = 'synhershko'
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']

    pkg {
        repo = "maven"
        name = "log4j2-elasticsearch-http"
        websiteUrl = "https://github.com/BigDataBoutique/log4j2-elasticsearch-http"
        vcsUrl = "https://github.com/BigDataBoutique/log4j2-elasticsearch-http.git"
        licenses = ['Apache-2.0']
        publish = true
        version {
            name = project.version
            released = new Date()
        }
    }
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "synhershko"
            name "Itamar Syn-Hershko"
            email "itamar@bigdataboutique.com"
        }
    }

    scm {
        url "https://github.com/BigDataBoutique/log4j2-elasticsearch-http"
        connection "scm:git:ssh://git@github.com/BigDataBoutique/log4j2-elasticsearch-http.git"
        developerConnection "scm:git:ssh://git@github.com/BigDataBoutique/log4j2-elasticsearch-http.git"
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId group
            artifactId 'log4j2-elasticsearch-http'
            version version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', description)
                root.appendNode('name', 'log4j2-elasticsearch-http')
                root.appendNode('url', 'https://github.com/BigDataBoutique/log4j2-elasticsearch-http')
                root.children().last() + pomConfig
            }
        }
    }
}
